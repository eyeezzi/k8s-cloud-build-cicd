steps:

# download dependencies
# SKIP

# run tests
- name: 'gcr.io/cloud-builders/go:alpine'
  id: Run unit tests
  args: ['test', './src/']
  env: ['GOPATH=.']
  # env: ['PROJECT_ROOT=polite']

# bundle app into container image
- name: 'gcr.io/cloud-builders/docker'
  id: Build docker image
  args: [ 'build', '--quiet', '-t', 'gcr.io/$PROJECT_ID/polite:$SHORT_SHA', '.']

# push the image to a registry
- name: 'gcr.io/cloud-builders/docker'
  id: Push image to registry
  args: [ 'push', 'gcr.io/$PROJECT_ID/polite:$SHORT_SHA']

# update the image version in the staging deployment manifest
# NOTE: I don't like the use of regex to update image tag, but no better option yet.
- name: 'gcr.io/cloud-builders/gcloud'
  id: Update deployment image tag for staging
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    sed -E -i "s|image:[[:space:]]*gcr[^[:space:]]*|image: gcr.io/$PROJECT_ID/polite:$SHORT_SHA|g" $_DEPLOYMENT_MANIFEST

# Save Gitlab Deploy Key as SSH Key
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo $$GITLAB_DEPLOY_TOKEN > /root/.ssh/id_rsa
    echo "-----"
    cat /root/.ssh/id_rsa
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  secretEnv: ['GITLAB_DEPLOY_TOKEN']
substitutions:
    _KMS_KEYRING: polite-staging
    _KMS_KEY: polite-staging-default
    _DEPLOYMENT_MANIFEST: k8s/staging-deployment.yaml
images:
- 'gcr.io/$PROJECT_ID/polite'
secrets:
- kmsKeyName: projects/$PROJECT_ID/locations/global/keyRings/$_KMS_KEYRING/cryptoKeys/$_KMS_KEY
  secretEnv:
    GITLAB_DEPLOY_TOKEN: CiUAaGdvFMVAJNHgGwEbzQ7sSUxmsJTnZbVpXFU9LBrl8gS045e4ErkNAJTa+0IkIy8v4ejMQ1Q1W8VZvSi81zlCIhlQZg5nDplBmWU0lFEcxlZn1Akk6VaIcWBav0xw6FaP55hphVTx/WgG/YanHhyucOdgcVf21KpixH1cekZAfQHr+67g3jaVsiAe8gfRgAfT/ecXacO+UzIP+yJeQmryDPyqWSQokH7n9Rr4fV2xuhN40vIIbp21Xz0KjamZ6/eZSVF31fcZPbh2mPQKIe8EZduLRHmuTeOgasieJnUqf7SbKERrrRUlNj5aR2ArMT0CXA70bswlYTv7Py5m5A3VEMU/FHJNZCeJxVMmndvcFVIpBPEvQUNeJxR3DJIq6Ulm0vs+EA+Ze/11VYRd0MOOI9OR/Rg+U4nEzVUA0M8eZVTpBkQlZGrHfJGJwXp/K168efHMCuJboTBMRIv2M4cKLPt+FcDc/3R3owpeQSeCbiXUDYIcTltO652II8AyQltIApyqbMjZFoI9eMG0X0UELF13cmRfzkGApZP2ON71KJp+9Egmdj8LmafAXTxs406rC+uUBmbPg5qqU7s5MTSyiQoi8tnRUjgc1MbU7T/9fc0Lsesl467Kt7sedhmxMICoAfhgyA8F9CYEqTl2DsGW2wVjdFFtJV5txUOXW87HBz1Rp+HsaDJad9jv5WbGNzVygypwtFvaQLFGSE9wRx6e1hSmRmn7uo69iVbweOGxFKY+pNTosMM4k7eX5kDzr8iRdeKcclGUQdR0QTS8Fgm2VSdqqOoifPvtUPpgqmjCi9nZW5f3zsGvt5cZAEHwcz9fYeQT7S9j+lH80bF6PBvbeOrqcrJtold8C05Mx3WjDvHxrylXd+RJZgdJbpLINhwqUvi8v2EcnJn/q+sQUzXxmGAyt4oWiSfa/Fh+8FOtBh1lpeTlRDaTAsHV1BvL8U3qk1TRslikZBSwjrFcQkp9PLqFAE+aLryc5tFVvB3b42vxkqgm3WD9EQVw3SdN8n4EZ/BXgUJG00wIkmAbgNY2yrgTUv72QCm32A+a8dudHPcw/0mjQZG+Mg7qjZW6GPgGIJZqbkMOlesdmyOmfuuZuW1vtGOorfT6s/lqHhcjFg/Oe55HkAf4ivFCjuRyXCMIr/NvnT+J4JPgNuV6PE/X60Ida6/dAddtW2pQAXmfN1DTTKQXkpmqUzZF1FS+ySBn8ijvTRTPp/zkM4tMUtpcON5+LFcwCnJbY76/V50BEb9yyPDSNxNZEN0BDvTJ6xgwr676mtf1sbufkf/5YY/s7FjAO4I8Dhmd+PZ91Q7foYxXAHwuPvDOhzBqg0gwhBKnxufc+aMzP9um8e52gk5QsSdTPh9rSAHdSEyGMP7W4omUuhwTiO5ZbSEXpAvGfY/IArexff7ZoeCvVW8q1Al0u5KCWQ7ZPtEAM1yaPTRLBU7Fa8MNkkWUb1p8A1oCXUl7XWjWUXvHlkj/LzK5esgpxBZeurQcECB1zL1Pst9Vg1sqHfOcKi5PoZng5e64G4P2cLB4cY4vgDrXXdzSMKYAxfw3sSWcJBI7nMUIVuVIXSP4o+2jiDcCaJkqL8B099IIazRsTgus68OPX55PsDv0upvJyp2ta53cGte9lyqRiF0JTc/aOhH5d8bN3+F0kZ0vSAhnmYh0GqAUGOTWj7g21BEu8UlaQW3BRNXYQmfTdDe2b+ana5T3bn+Lh+BotrtMb9pRU3POG/2lymJtKo6/l7PlBflL2RZvyPVqF31gjBxcNEQyAquun2pDYAXRynnhssd9PWaQSCw1vRhrfog2Kg0r0jHI3qjZHUPZ7DZ1sT3T4r3oVDGBVxnWQwZsL9AkOpojx3Ker8B3KC8IirE5Cyo4gVjsyllKm0sIdahWCC/8SFxndauXfpvzClESmLlFJg0dN8zzlFIUXpQAbMYC0p5Km8G+f3p5Dq1PHBgGfA6THuSX3VZr4sFn/5uqlP+GR6ekZdyF0oN/1Qzn1XLPqGhidVDu+cPtxhWKnvWSLC0AZSfQnpuR3LUEMdLcBz80doShPek8C1MoJRXcSkimkX171YrnYFNQj5Gr2j2qWq9QsL4ccViPMNutlMXUm41GOqpBwdYv8AZ3tXedsvGnThrjJ+0JTdv2JMsjN09bOyu2/phpqvkj8ZN8uYR/rd3BdqL/CbqWLiUv5gsJx3regjXX4jYSRmRG4S9glWvgyADKBspwkRWhPOoQ8BRriaEPyclWMm0m9aXfwZODHq9qw2nar8hDVieKsqq/wxoR19ggaAZCqetNWI7rSrdilLi+vb8ARVyVYHe4/1pARG6RAvEVb0jSgOnbo1l8xQV0EoM=
