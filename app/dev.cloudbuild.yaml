steps:

# download dependencies
# SKIP

# run tests
- name: 'gcr.io/cloud-builders/go:alpine'
  id: Run unit tests
  args: ['test', './src/']
  env: ['GOPATH=.']
  # env: ['PROJECT_ROOT=polite']

# bundle app into container image
- name: 'gcr.io/cloud-builders/docker'
  id: Build application image
  args: [ 'build', '--quiet', '-t', 'gcr.io/$PROJECT_ID/polite:$SHORT_SHA', '.']

# push the image to a registry
- name: 'gcr.io/cloud-builders/docker'
  id: Push image to registry
  args: [ 'push', 'gcr.io/$PROJECT_ID/polite:$SHORT_SHA']

# update the image version in the staging deployment manifest
# NOTE: I don't like the use of regex to update image tag, but no better option yet.
- name: 'gcr.io/cloud-builders/gcloud'
  id: Update deployment image tag for staging
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    sed -E -i "s|image:[[:space:]]*gcr[^[:space:]]*|image: gcr.io/$PROJECT_ID/polite:$SHORT_SHA|g" $_DEPLOYMENT_MANIFEST

# Commit the updated deployment manifest.
- name: 'gcr.io/cloud-builders/git'
  id: Commit updated deployment manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    git fetch origin $BRANCH_NAME
    git checkout $BRANCH_NAME
    git remote add gitlab git@gitlab.com:eyeezzi/k8s-cloud-build-cicd.git
    echo "---"
    git remote -v
    git add $_DEPLOYMENT_MANIFEST
    git commit -m "Generated manifest files for deployment."
    git config core.sshCommand "ssh -i `pwd`/../secrets/gitlab-ssh-key.enc -F /dev/null"
    git push -u gitlab $BRANCH_NAME
  # volumes:
  # - name: 'ssh'
  #   path: /root/.ssh
images:
- 'gcr.io/$PROJECT_ID/polite'
secrets:
# DRAWBACK: you cannot use variable substitution for project-id, kms-keyring, and kms-key
- kmsKeyName: projects/k8s-cicd-251209/locations/global/keyRings/polite-staging/cryptoKeys/polite-staging-default
substitutions:
    _KMS_KEYRING: polite-staging
    _KMS_KEY: polite-staging-default
    _DEPLOYMENT_MANIFEST: k8s/staging-deployment.yaml